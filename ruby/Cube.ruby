# https://www.codewars.com/kata/5970fc389f4a1ce8de000061

def draw_cube n
  return "" if n.zero?
  return "#\n" if n == 1
  return " ##\n###\n##\n" if n == 2
  top = (0...n - 1).map{|x|"#{' ' * (n - x - 1)}##{x.zero? ? '#' * (n - 3) : '*' * (n - 2)}##{'*' * [x - 1, 0].max}#"}
  middle = (0...n - 1).map{|x|"##{(x.zero? ? '#' : ' ') * (n - 2)}##{'*' * (n - 2 - x)}#"}
  bottom = ['#' * n]
  [top, middle, bottom].map{|x| x.join("\n")}.join("\n")+"\n"
end

describe "Final tests" do
    it "First values" do
        answers = [
            "",
            "#\n",
            " ##\n###\n##\n",
            "  ###\n #*##\n###*#\n# ##\n###\n",
            "   ####\n  #**##\n #**#*#\n####**#\n#  #*#\n#  ##\n####\n",
            "    #####\n   #***##\n  #***#*#\n #***#**#\n#####***#\n#   #**#\n#   #*#\n#   ##\n#####\n",
            "     ######\n    #****##\n   #****#*#\n  #****#**#\n #****#***#\n######****#\n#    #***#\n#    #**#\n#    #*#\n#    ##\n######\n",
            "      #######\n     #*****##\n    #*****#*#\n   #*****#**#\n  #*****#***#\n #*****#****#\n#######*****#\n#     #****#\n#     #***#\n#     #**#\n#     #*#\n#     ##\n#######\n",
            "       ########\n      #******##\n     #******#*#\n    #******#**#\n   #******#***#\n  #******#****#\n #******#*****#\n########******#\n#      #*****#\n#      #****#\n#      #***#\n#      #**#\n#      #*#\n#      ##\n########\n",
            "        #########\n       #*******##\n      #*******#*#\n     #*******#**#\n    #*******#***#\n   #*******#****#\n  #*******#*****#\n #*******#******#\n#########*******#\n#       #******#\n#       #*****#\n#       #****#\n#       #***#\n#       #**#\n#       #*#\n#       ##\n#########\n",
            "         ##########\n        #********##\n       #********#*#\n      #********#**#\n     #********#***#\n    #********#****#\n   #********#*****#\n  #********#******#\n #********#*******#\n##########********#\n#        #*******#\n#        #******#\n#        #*****#\n#        #****#\n#        #***#\n#        #**#\n#        #*#\n#        ##\n##########\n",
        ]
        
        answers.each.with_index do |expected, k|
            answer = draw_cube(k)
            Test.assert_equals(answer, expected, "drawCube(#{k}) should be:\n  \n#{expected}\nInstead got:\n#{answer}")
        end
    end
end

⬇️⬇️

=begin 
Example (n=4)
   ####\n
  #**##\n
 #**#*#\n
####**#\n
#  #*#\n
#  ##\n
####\n 
=end
