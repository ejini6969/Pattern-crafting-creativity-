function pattern(n){
   return Array.from({length:n}, (_, i) => ' '.repeat(i + 1) + String((i + 1) % 10).repeat(n - i).split('').join(' ')).join('\n')
}

const { assert } = require("chai")

describe("Tests", () => {
  it("test", () => {
	  assert.strictEqual(pattern(7)," 1 1 1 1 1 1 1\n  2 2 2 2 2 2\n   3 3 3 3 3\n    4 4 4 4\n     5 5 5\n      6 6\n       7");
    assert.strictEqual(pattern(12)," 1 1 1 1 1 1 1 1 1 1 1 1\n  2 2 2 2 2 2 2 2 2 2 2\n   3 3 3 3 3 3 3 3 3 3\n    4 4 4 4 4 4 4 4 4\n     5 5 5 5 5 5 5 5\n      6 6 6 6 6 6 6\n       7 7 7 7 7 7\n        8 8 8 8 8\n         9 9 9 9\n          0 0 0\n           1 1\n            2");
    assert.strictEqual(pattern(21)," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n   3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n    4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n     5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n      6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\n       7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\n        8 8 8 8 8 8 8 8 8 8 8 8 8 8\n         9 9 9 9 9 9 9 9 9 9 9 9 9\n          0 0 0 0 0 0 0 0 0 0 0 0\n           1 1 1 1 1 1 1 1 1 1 1\n            2 2 2 2 2 2 2 2 2 2\n             3 3 3 3 3 3 3 3 3\n              4 4 4 4 4 4 4 4\n               5 5 5 5 5 5 5\n                6 6 6 6 6 6\n                 7 7 7 7 7\n                  8 8 8 8\n                   9 9 9\n                    0 0\n                     1");
  });
});

⬇️⬇️

/* Example(16)：
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  3 3 3 3 3 3 3 3 3 3 3 3 3 3
   4 4 4 4 4 4 4 4 4 4 4 4 4
    5 5 5 5 5 5 5 5 5 5 5 5
     6 6 6 6 6 6 6 6 6 6 6
      7 7 7 7 7 7 7 7 7 7
       8 8 8 8 8 8 8 8 8
        9 9 9 9 9 9 9 9
         0 0 0 0 0 0 0
          1 1 1 1 1 1
           2 2 2 2 2
            3 3 3 3
             4 4 4
              5 5
               6
*/
